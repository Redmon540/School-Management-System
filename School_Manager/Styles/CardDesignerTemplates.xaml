<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:School_Manager"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <!-- RotateThumb Style -->
    <Style TargetType="{x:Type local:RotateThumb}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Cursor" Value=""/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RotateThumb}">
                    <Grid Width="30" Height="30">
                        <Path Fill="#AAD0D0DD"
                              Stretch="Fill"
                              Data="M 50,100 A 50,50 0 1 1 100,50 H 50 V 100"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RotateDecorator Template -->
    <ControlTemplate x:Key="RotateDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Opacity="0">
            <local:RotateThumb Margin="-18,-18,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <local:RotateThumb Margin="0,-18,-18,0" VerticalAlignment="Top" HorizontalAlignment="Right">
                <local:RotateThumb.RenderTransform>
                    <RotateTransform Angle="90" />
                </local:RotateThumb.RenderTransform>
            </local:RotateThumb>
            <local:RotateThumb Margin="0,0,-18,-18" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <local:RotateThumb.RenderTransform>
                    <RotateTransform Angle="180" />
                </local:RotateThumb.RenderTransform>
            </local:RotateThumb>
            <local:RotateThumb Margin="-18,0,0,-18" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <local:RotateThumb.RenderTransform>
                    <RotateTransform Angle="270" />
                </local:RotateThumb.RenderTransform>
            </local:RotateThumb>
        </Grid>
    </ControlTemplate>

    <!--Resize Decorator-->
    <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
        <Border BorderBrush="{StaticResource DarkGrayBrush}"
                BorderThickness="1"
                x:Name="border">
            <Grid SnapsToDevicePixels="True" Opacity="0">
                <local:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 -4 0 0"
                         VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                <local:ResizeThumb Width="3" Cursor="SizeWE" Margin="-4 0 0 0"
                         VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                <local:ResizeThumb Width="3" Cursor="SizeWE" Margin="0 0 -4 0"
                         VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                <local:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 0 0 -4"
                         VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                <local:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0"
                         VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <local:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0"
                         VerticalAlignment="Top" HorizontalAlignment="Right"/>
                <local:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6"
                         VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                <local:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6"
                         VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <!--Move thumb template-->
    <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type local:MoveThumb}">
        <Rectangle Fill="Transparent"/>
    </ControlTemplate>

    <!-- ContentControl style to move, resize and rotate items -->
    <Style x:Key="DesignerItemStyle" TargetType="ContentControl">
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <local:MoveThumb Template="{StaticResource MoveThumbTemplate}"
                                         Cursor="SizeAll"/>
                        <Control x:Name="ResizeDecorator" 
                                 Template="{StaticResource ResizeDecoratorTemplate}"
                                 Opacity="0"/>
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardCanvasStyle" TargetType="{x:Type ItemsControl}">
        <Style.Resources>
            <DataTemplate DataType="{x:Type local:TextControl}">
                <Canvas>
                    <ContentControl Width="{Binding Width,Mode=TwoWay}" Height="{Binding Height,Mode=TwoWay}"
                                    Canvas.Top="{Binding CanvasTop,Mode=TwoWay}"
                                    Canvas.Left="{Binding CanvasLeft,Mode=TwoWay}"
                                    Style="{StaticResource DesignerItemStyle}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="Black" BorderThickness="1" Opacity="1" Padding="2"/>
                            <TextBlock Text="{Binding Value}" Cursor="Hand"
                                       IsHitTestVisible="{Binding IsHitTestVisible}"
                                       TextAlignment="{Binding TextAlignment}"
                                       FontStyle="{Binding FontStyle}"
                                       FontWeight="{Binding FontWeight}"
                                       FontSize="{Binding FontSize}"
                                       TextDecorations="{Binding TextDecoration}"
                                       TextWrapping="NoWrap"
                                       Focusable="True"
                                       Foreground="{Binding Foreground}">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.SelectionChangeCommand ,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"
                                                  CommandParameter="{Binding}"
                                                  MouseAction="LeftClick"/>
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </Grid>
                    </ContentControl>
                </Canvas>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter TargetName="border" Property="Opacity" Value="1"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                        <Setter TargetName="border" Property="Opacity" Value="0"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:ImageControl}">
                <Canvas>
                    <ContentControl Width="{Binding Width,Mode=TwoWay}" Height="{Binding Height,Mode=TwoWay}"
                                    Canvas.Top="{Binding CanvasTop,Mode=TwoWay}"
                                    Canvas.Left="{Binding CanvasLeft,Mode=TwoWay}"
                                    Selector.IsSelected="{Binding IsSelected}"
                                    Style="{StaticResource DesignerItemStyle}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="Black" BorderThickness="1" Opacity="1" />
                            <Image Source="{Binding Image}" Stretch="Fill" IsHitTestVisible="{Binding IsHitTestVisible}" Margin="1" Cursor="Hand">
                                <Image.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.SelectionChangeCommand ,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"
                                                  CommandParameter="{Binding}"
                                                  MouseAction="LeftClick"/>
                                </Image.InputBindings>
                            </Image>
                        </Grid>
                    </ContentControl>
                </Canvas>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter TargetName="border" Property="Opacity" Value="1"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                        <Setter TargetName="border" Property="Opacity" Value="0"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:QRCodeControl}">
                <Canvas>
                    <ContentControl Width="{Binding Width,Mode=TwoWay}" Height="{Binding Height,Mode=TwoWay}"
                                    Canvas.Top="{Binding CanvasTop,Mode=TwoWay}"
                                    Canvas.Left="{Binding CanvasLeft,Mode=TwoWay}"
                                    Selector.IsSelected="{Binding IsSelected}"
                                    Style="{StaticResource DesignerItemStyle}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="Black" BorderThickness="1" Opacity="1" />
                            <Image Source="{Binding Image}" Stretch="Fill" IsHitTestVisible="{Binding IsHitTestVisible}" Margin="1" Cursor="Hand">
                                <Image.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.SelectionChangeCommand ,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"
                                                  CommandParameter="{Binding}"
                                                  MouseAction="LeftClick"/>
                                </Image.InputBindings>
                            </Image>
                        </Grid>
                    </ContentControl>
                </Canvas>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter TargetName="border" Property="Opacity" Value="1"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                        <Setter TargetName="border" Property="Opacity" Value="0"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:FeeControl}">
                <Canvas>
                    <ContentControl Width="{Binding Width,Mode=TwoWay}" Height="{Binding Height,Mode=TwoWay}"
                                    Canvas.Top="{Binding CanvasTop,Mode=TwoWay}"
                                    Canvas.Left="{Binding CanvasLeft,Mode=TwoWay}"
                                    Style="{StaticResource DesignerItemStyle}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="Black" BorderThickness="1" Opacity="1" Padding="2"/>
                            <TextBlock Text="{Binding Value}" Cursor="Hand"
                                       IsHitTestVisible="{Binding IsHitTestVisible}"
                                       TextAlignment="{Binding TextAlignment}"
                                       FontStyle="{Binding FontStyle}"
                                       FontWeight="{Binding FontWeight}"
                                       FontSize="{Binding FontSize}"
                                       TextDecorations="{Binding TextDecoration}"
                                       TextWrapping="NoWrap"
                                       Focusable="True"
                                       Foreground="{Binding Foreground}"
                                       Background="{Binding Background}">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.SelectionChangeCommand ,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"
                                                  CommandParameter="{Binding}"
                                                  MouseAction="LeftClick"/>
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </Grid>
                    </ContentControl>
                </Canvas>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter TargetName="border" Property="Opacity" Value="1"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                        <Setter TargetName="border" Property="Opacity" Value="0"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </Style.Resources>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid Height="{Binding Height,RelativeSource={RelativeSource Mode=FindAncestor, 
                                AncestorType={x:Type UserControl}}}" 
                          Width="{Binding Width,RelativeSource={RelativeSource Mode=FindAncestor, 
                              AncestorType={x:Type UserControl}}}"
                          ClipToBounds="True" Background="Transparent"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>