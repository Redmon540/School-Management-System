<local:BasePage x:TypeArguments="local:EnterExpenseViewModel"  
                x:Class="School_Manager.EnterExpense"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                xmlns:local="clr-namespace:School_Manager"
                mc:Ignorable="d" 
                Title="EnterExpense" Background="White">

    <Grid Margin="20 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Header-->
        <local:Header Heading="Manage Expenses"/>

        <TabControl Grid.Row="1" Margin="0 10 0 0">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border Name="Border" Margin="5,0,0,0" Background="{StaticResource LightGrayBrush}"
                                                         CornerRadius="7 7 0 0">
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"
                                                                      ContentSource="Header" Margin="12,2,12,2"
                                                                      RecognizesAccessKey="True" Cursor="Hand">
                                        </ContentPresenter>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkGrayBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </TabControl.Resources>
            <TabControl.Style>
                <Style BasedOn="{StaticResource {x:Type TabControl}}" TargetType="{x:Type TabControl}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid KeyboardNavigation.TabNavigation="Local">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).
                                                                                                (SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Margin="0,0,0,-1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"  />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="toggle" Style="{StaticResource MaterialDesignSwitchToggleButton}" Cursor="Hand"
                                                                  Padding="0" Grid.Column="1" IsChecked="True" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,1">
                                            <materialDesign:PackIcon
                                                                Kind="Pin"
                                                                RenderTransformOrigin=".5,.5">
                                                <materialDesign:PackIcon.RenderTransform>
                                                    <RotateTransform
                                                                                        Angle="45" />
                                                </materialDesign:PackIcon.RenderTransform>
                                            </materialDesign:PackIcon>
                                            <materialDesign:ToggleButtonAssist.OnContent>
                                                <materialDesign:PackIcon
                                                                                         Kind="Pin" />
                                            </materialDesign:ToggleButtonAssist.OnContent>
                                        </ToggleButton>
                                        <TabPanel Grid.Column="0" x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="4,0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                                    </Grid>
                                    <Border x:Name="Border" Grid.Row="1" BorderThickness="1" CornerRadius="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"
                                        Visibility="{Binding IsChecked, ElementName=toggle,Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}" />
                                        </Border.BorderBrush>
                                        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Style>
            <!--Add Expense-->
            <TabItem Header="Add Expense">
                <Border CornerRadius="0 0 5 5" 
                    Background="{StaticResource LightGrayBrush}"
                    Margin="4 -4 0 0" >

                    <Grid Margin="0 20 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Expense Type-->
                        <ComboBox materialDesign:HintAssist.Hint="Select Expense Type"
                                  SelectedItem="{Binding ExpenseCollection.SelectedExpense}"
                                  ItemsSource="{Binding ExpenseCollection.ExpenseTypes}"
                                  FontSize="{StaticResource FontSizeMedium}"
                                  Margin="10 0" Cursor="Hand"
                                  VerticalAlignment="Center"/>

                        <!--Amount-->
                        <TextBox materialDesign:HintAssist.Hint="Amount"
                                 Text="{Binding Amount}"
                                 FontSize="{StaticResource FontSizeMedium}"
                                 Margin="10 0" Grid.Column="1"
                                 VerticalAlignment="Center"/>

                        <!--Description-->
                        <TextBox materialDesign:HintAssist.Hint="Description"
                                 Text="{Binding Description}"
                                 FontSize="{StaticResource FontSizeMedium}"
                                 Margin="10 0" Grid.Column="2"
                                 VerticalAlignment="Center"/>

                        <!--Description-->
                        <DatePicker materialDesign:HintAssist.Hint="Date"
                                    SelectedDate="{Binding SelectedDate}"
                                    FontSize="{StaticResource FontSizeMedium}"
                                    Margin="10 0" Grid.Column="3"
                                    VerticalAlignment="Center"/>
                        
                        <!--Add Expense-->
                        <Button Content="Add Expense" Grid.Column="4"
                            Padding="20 5" Margin="10"
                            Command="{Binding AddExpenseCommand}"
                            Style="{StaticResource LightPrimaryButton}"/>
                    </Grid>

                </Border>
            </TabItem>
            
            <!--Create Expense-->
            <TabItem Header="Create Expense">
                <Border CornerRadius="0 0 5 5" 
                    Background="{StaticResource LightGrayBrush}"
                    Margin="4 -4 0 0" >


                    <Grid Margin="0 20 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!--Expense Title-->
                        <TextBox Text="{Binding ExpenseTitle}"
                             materialDesign:HintAssist.Hint="Expense Title"
                             FontSize="{StaticResource FontSizeMedium}"
                             Margin="10 0"
                             VerticalAlignment="Center"/>
                        <Button Content="Create Expense" Grid.Column="1"
                            Padding="20 5" Margin="10"
                            Command="{Binding CreateExpenseCommand}"
                            Style="{StaticResource LightPrimaryButton}"/>
                    </Grid>

                </Border>
            </TabItem>
            
            <!--Edit Expense-->
            <TabItem Header="Edit Expense">
                <Border CornerRadius="0 0 5 5" 
                        Background="{StaticResource LightGrayBrush}"
                        Margin="4 -4 0 0" >

                    <Grid Margin="0 25 0 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!--Expense Title-->
                        <ComboBox materialDesign:HintAssist.Hint="Select Expense Type"
                                  SelectedItem="{Binding ExpenseCollection.SelectedExpense}"
                                  ItemsSource="{Binding ExpenseCollection.ExpenseTypes}"
                                  FontSize="{StaticResource FontSizeMedium}"
                                  Margin="10 0" Cursor="Hand"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding ExpenseCollection.IsEditing,
                        Converter={local:BoolToInverseVisibilityConverter}}"/>
                        <TextBox Text="{Binding ExpenseCollection.SelectedExpense}"
                                 FontSize="{StaticResource FontSizeMedium}"
                                 Margin="10 0" Grid.Column="0"
                                 VerticalAlignment="Center"
                                 Visibility="{Binding ExpenseCollection.IsEditing,
                        Converter={local:BoolToVisibilityConverter}}"/>
                        <Button Content="{Binding ExpenseCollection.EditIcon}"
                                Style="{StaticResource IconGrowButton}"
                                Grid.Column="1" Margin="10 0"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                Foreground="{StaticResource DarkGreenColorBrush}"
                                Command="{Binding DataContext.EditExpenseTypeCommand,
                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                   AncestorType={x:Type local:BasePage}}}"/>
                        <Button Content="{StaticResource DeleteBinIcon}"
                                Style="{StaticResource IconGrowButton}"
                                Grid.Column="2"
                                Foreground="{StaticResource RedColorBrush}"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                Margin="10 0"
                                Command="{Binding DataContext.DeleteExpenseTypeCommand,
                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                   AncestorType={x:Type local:BasePage}}}"/>

                    </Grid>

                </Border>

            </TabItem>
        </TabControl>

        <!--day month year-->
        <Grid HorizontalAlignment="Right" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!--Grouped-->
            <CheckBox Content="Group By Expense" VerticalAlignment="Bottom" Margin="0 0 0 5"
                      Cursor="Hand" IsChecked="{Binding IsGrouped}" FontSize="{StaticResource FontSizeMedium}"/>
            <!--day-->
            <ComboBox Style="{StaticResource ComboBoxValidationTemplate}" MinWidth="100"
                      DataContext="{Binding Days}" Grid.Column="1" Margin="10 10 10 0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DataContext.DateChangedCommand
                            ,RelativeSource={RelativeSource Mode=FindAncestor ,
                            AncestorType={x:Type local:BasePage}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <!--Month-->
            <ComboBox Style="{StaticResource ComboBoxValidationTemplate}" MinWidth="100"
                      DataContext="{Binding Months}" Grid.Column="2" Margin="10 10 10 0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DataContext.DateChangedCommand
                            ,RelativeSource={RelativeSource Mode=FindAncestor ,
                            AncestorType={x:Type local:BasePage}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <!--Year-->
            <ComboBox Style="{StaticResource ComboBoxValidationTemplate}" MinWidth="100"
                      DataContext="{Binding Years}" Grid.Column="3" Margin="10 10 10 0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DataContext.DateChangedCommand
                            ,RelativeSource={RelativeSource Mode=FindAncestor ,
                            AncestorType={x:Type local:BasePage}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </Grid>
        
        <!--Expense Header-->
        <Border Grid.Row="3" Background="{StaticResource PrimaryColorBrush}"
                Margin="0 20 0 0" CornerRadius="5">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition  Width="2*"/>
                    <ColumnDefinition  Width="40"/>
                    <ColumnDefinition  Width="40"/>
                </Grid.ColumnDefinitions>
                <!--Expense Type-->
                <TextBlock Text="Expense Type" HorizontalAlignment="Left"
                           FontSize="{StaticResource FontSizeMedium}"
                           Foreground="{StaticResource LightColorBrush}"
                           Margin="10 5" FontWeight="SemiBold"/>
                
                <!--Epense Amount-->
                <TextBlock Text="Amount" HorizontalAlignment="Left"
                           Foreground="{StaticResource LightColorBrush}"
                           FontSize="{StaticResource FontSizeMedium}"
                           Margin="10 5" FontWeight="SemiBold" Grid.Column="1"/>
                <!--Description-->
                <TextBlock Text="Description" HorizontalAlignment="Left"
                           Foreground="{StaticResource LightColorBrush}"
                           FontSize="{StaticResource FontSizeMedium}"
                           Margin="10 5" FontWeight="SemiBold" Grid.Column="2"/>
               
            </Grid>

        </Border>
        <!--Expenses-->
        <ScrollViewer Grid.Row="4">
            <ItemsControl AlternationCount="2"  Margin="0 0 0 20"
                          ItemsSource="{Binding Expenses}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Name="Row">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition  Width="2*"/>
                            <ColumnDefinition  Width="40"/>
                            <ColumnDefinition  Width="40"/>
                        </Grid.ColumnDefinitions>
                        <!--Expense Type-->
                            <TextBlock Text="{Binding ExpenseType}" Foreground="{Binding Foreground}"
                                   FontSize="{StaticResource FontSizeMedium}"
                                   Margin="10 5" HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding IsEditing,Converter={local:BoolToInverseVisibilityConverter}}"/>
                        <ComboBox materialDesign:HintAssist.Hint="Select Expense Type"
                                  SelectedItem="{Binding ExpenseType}"
                                  ItemsSource="{Binding DataContext.ExpenseCollection.ExpenseTypes,
                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                   AncestorType={x:Type local:BasePage}}}"
                                  FontSize="{StaticResource FontSizeMedium}"
                                  Margin="10 5" Cursor="Hand"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding IsEditing,Converter={local:BoolToVisibilityConverter}}"/>
                        
                        <!--Expense Amount-->
                                
                            <TextBlock Text="{Binding Amount,ConverterCulture='ur-PK' , StringFormat=C0}"
                                       VerticalAlignment="Center" Foreground="{Binding Foreground}"
                                       FontSize="{StaticResource FontSizeMedium}"
                                       HorizontalAlignment="Left"
                                       Margin="10 5" Grid.Column="1"
                                       Visibility="{Binding IsEditing,Converter={local:BoolToInverseVisibilityConverter}}"/>
                        <TextBox Text="{Binding Amount}"
                                 VerticalAlignment="Center"
                                 FontSize="{StaticResource FontSizeMedium}"
                                 Margin="10 5" Grid.Column="1"
                                 Visibility="{Binding IsEditing,Converter={local:BoolToVisibilityConverter}}"/>
                        <!--Description-->
                        <TextBlock Text="{Binding Description}"
                                   VerticalAlignment="Center" Foreground="{Binding Foreground}"
                                   TextWrapping="Wrap" HorizontalAlignment="Left"
                                   FontSize="{StaticResource FontSizeMedium}"
                                   Margin="10 5" Grid.Column="2"
                                   Visibility="{Binding IsEditing,Converter={local:BoolToInverseVisibilityConverter}}"/>
                        <TextBox Text="{Binding Description}"
                                 TextWrapping="Wrap"
                                 VerticalAlignment="Center"
                                 FontSize="{StaticResource FontSizeMedium}"
                                 Margin="10 5" Grid.Column="2"
                                 Visibility="{Binding IsEditing,Converter={local:BoolToVisibilityConverter}}"/>
                        <!--Edit/Delete Expense-->
                        <Button Content="{Binding EditIcon}"
                                VerticalAlignment="Center"
                                Style="{StaticResource IconGrowButton}"
                                Grid.Column="3" Margin="10 0"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                Foreground="{StaticResource DarkGreenColorBrush}"
                                Command="{Binding DataContext.EditExpenseCommand,
                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                   AncestorType={x:Type local:BasePage}}}"
                                CommandParameter="{Binding}"
                                Visibility="{Binding DataContext.IsGrouped,
                            RelativeSource={RelativeSource  Mode=FindAncestor,
                            AncestorType={x:Type local:BasePage}},Converter={local:BoolToInverseVisibilityConverter}}"/>
                        <Button Content="{StaticResource DeleteBinIcon}"
                                VerticalAlignment="Center"
                                Style="{StaticResource IconGrowButton}"
                                Grid.Column="4"
                                Foreground="{StaticResource RedColorBrush}"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                Margin="10 0"
                                Command="{Binding DataContext.DeleteExpenseCommand,
                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                   AncestorType={x:Type local:BasePage}}}"
                                CommandParameter="{Binding}"
                                Visibility="{Binding DataContext.IsGrouped,
                            RelativeSource={RelativeSource  Mode=FindAncestor,
                            AncestorType={x:Type local:BasePage}},Converter={local:BoolToInverseVisibilityConverter}}"/>
                    </Grid>
                    <!--Alternating row color for records-->
                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" TargetName="Row">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource VeryLightGray}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" TargetName="Row">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource LightGray}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        </ScrollViewer>

        <Border Grid.Row="5" Background="{StaticResource VeryDarkGrayBrush}"
                Margin="10" CornerRadius="5" HorizontalAlignment="Center">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text=""
                           FontWeight="SemiBold"
                           Foreground="{StaticResource LightColorBrush}"
                           FontSize="{StaticResource FontSizeMedium}"/>
                <TextBlock Text="{Binding TotalAmount,ConverterCulture='ur-PK', StringFormat='Total Amount = {0:C0}'}"
                           FontWeight="SemiBold"
                           Foreground="{StaticResource LightColorBrush}"
                           FontSize="{StaticResource FontSizeMedium}"/>
            </Grid>
        </Border>


    </Grid>
</local:BasePage>
