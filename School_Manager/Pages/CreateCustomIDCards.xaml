<local:BasePage x:TypeArguments="local:CreateCustomIDCardsViewModel"   
                x:Class="School_Manager.CreateCustomIDCards"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:local="clr-namespace:School_Manager"
                xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                mc:Ignorable="d" Background="White"
                Title="CreateCustomIDCards">
    <local:BasePage.InputBindings>
        <KeyBinding Command="{Binding DeleteCommand}" Key="Delete"/>
    </local:BasePage.InputBindings>
    <materialDesign:DialogHost IsOpen="{Binding IsDialogOpen}">

        <materialDesign:DialogHost.DialogContent>
            <TextBlock Text="Generating ID cards..."
                Margin="50,30"
                Panel.ZIndex="1"/>
        </materialDesign:DialogHost.DialogContent>

        <Grid Margin="20 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!--Header-->
            <local:Header Heading="Create ID Cards" Grid.ColumnSpan="2"/>

            <!--Columns-->
            <Expander Grid.Column="1" Grid.Row="1" Grid.RowSpan="6" 
                      ExpandDirection="Right"
                      IsExpanded="True">
                <Expander.Header>
                    <TextBlock Foreground="{StaticResource PrimaryColorBrush}"
                               Text="{Binding InfoText}" FontWeight="SemiBold"
                               RenderTransformOrigin=".5,.5">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                
                <Grid>

                    <Border MinWidth="150"
                            Background="{StaticResource LightGrayBrush}" 
                            CornerRadius="20" Margin="0 20" x:Name="border" SnapsToDevicePixels="False"/>
                    <Grid Margin="0 20">
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=border}"/>
                        </Grid.OpacityMask>
                        <ListBox PreviewMouseLeftButtonDown="ListBox_PreviewMouseLeftButtonDown" 
                         PreviewMouseMove="ListBox_PreviewMouseMove"
                         ItemsSource="{Binding ColumnsList}"
                         Cursor="Hand">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" 
                                       PreviewMouseLeftButtonDown="ListBox_PreviewMouseLeftButtonDown" 
                                        PreviewMouseMove="ListBox_PreviewMouseMove"
                                       Foreground="{StaticResource DarkRedColorBrush}" FontWeight="SemiBold"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Grid>
            </Expander>

            <!--Toolbar-->
            <TabControl Grid.Column="0" Grid.Row="1"
                            Margin="0 10 0 0">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Grid>
                                            <Border Name="Border" Margin="5,0,0,0" Background="{StaticResource LightGrayBrush}"
                                                         CornerRadius="7 7 0 0">
                                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"
                                                                      ContentSource="Header" Margin="12,2,12,2"
                                                                      RecognizesAccessKey="True" Cursor="Hand">
                                                </ContentPresenter>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkGrayBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </TabControl.Resources>
                    <TabControl.Style>
                        <Style BasedOn="{StaticResource {x:Type TabControl}}" TargetType="{x:Type TabControl}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabControl}">
                                        <Grid KeyboardNavigation.TabNavigation="Local">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).
                                                                                                (SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Margin="0,0,0,-1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"  />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="toggle" Style="{StaticResource MaterialDesignSwitchToggleButton}" Cursor="Hand"
                                                                  Padding="0" Grid.Column="1" IsChecked="True" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,1">
                                                    <materialDesign:PackIcon
                                                                Kind="Pin"
                                                                RenderTransformOrigin=".5,.5">
                                                        <materialDesign:PackIcon.RenderTransform>
                                                            <RotateTransform
                                                                                        Angle="45" />
                                                        </materialDesign:PackIcon.RenderTransform>
                                                    </materialDesign:PackIcon>
                                                    <materialDesign:ToggleButtonAssist.OnContent>
                                                        <materialDesign:PackIcon
                                                                                         Kind="Pin" />
                                                    </materialDesign:ToggleButtonAssist.OnContent>
                                                </ToggleButton>
                                                <TabPanel Grid.Column="0" x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="4,0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                                            </Grid>
                                            <Border x:Name="Border" Grid.Row="1" BorderThickness="1" CornerRadius="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"
                                        Visibility="{Binding IsChecked, ElementName=toggle,Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                                                </Border.Background>
                                                <Border.BorderBrush>
                                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}" />
                                                </Border.BorderBrush>
                                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Style>
                    <TabItem Header="Options" Background="AliceBlue">
                        <!--Toolbar-->
                        <StackPanel>

                            <!--Options-->
                            <Grid Grid.Row="0" Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <ComboBox Style="{StaticResource ComboBoxValidationTemplate}"
                                          DataContext="{Binding IDType}"
                                          MaxWidth="200"
                                          Cursor="Hand">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding DataContext.IDTypeChangedCommand,
                                                                   RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>

                            <ComboBox Style="{StaticResource ComboBoxValidationTemplate}"
                                      DataContext="{Binding Class}"
                                      Grid.Column="1"
                                      MaxWidth="200"
                                      Cursor="Hand"
                                      Visibility="{Binding DataContext.ClassVisibility,
                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}},Converter={local:BoolToVisibilityConverter}}"/>

                            <ComboBox Style="{StaticResource ComboBoxValidationTemplate}"
                                      DataContext="{Binding Options}"
                                      Grid.Column="2"
                                      MaxWidth="200"
                                      Cursor="Hand">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding DataContext.OptionsChangedCommand,
                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>


                            </Grid>

                            <ToolBarTray>
                                <ToolBar Style="{DynamicResource MaterialDesignToolBar}"
                                             ClipToBounds="False">

                                    <!--Alignment Tools-->
                                    <ListBox SelectedIndex="{Binding SelectedAligment}">
                                        <ListBoxItem>
                                            <TextBlock FontFamily="{StaticResource FontAwesomeSolid}" 
                                                           FontSize="{StaticResource FontSizeSmall}"
                                                           Text="{StaticResource AlignLeftIcon}"/>
                                        </ListBoxItem>
                                        <ListBoxItem>
                                            <TextBlock FontFamily="{StaticResource FontAwesomeSolid}" 
                                                           FontSize="{StaticResource FontSizeSmall}"
                                                           Text="{StaticResource AlignRightIcon}"/>
                                        </ListBoxItem>
                                        <ListBoxItem>
                                            <TextBlock FontFamily="{StaticResource FontAwesomeSolid}" 
                                                           FontSize="{StaticResource FontSizeSmall}"
                                                           Text="{StaticResource AlignCenterIcon}"/>
                                        </ListBoxItem>
                                        <ListBoxItem>
                                            <TextBlock FontFamily="{StaticResource FontAwesomeSolid}" 
                                                           FontSize="{StaticResource FontSizeSmall}"
                                                           Text="{StaticResource AlignJustifyIcon}"/>
                                        </ListBoxItem>
                                    </ListBox>

                                    <Separator />

                                    <Button Style="{StaticResource FlatButton}"
                                                FontSize="{StaticResource FontSizeSmall}"
                                                Content="{StaticResource BoldTextIcon}"
                                                Command="{Binding TextStyleCommand}"
                                                CommandParameter="{Binding Content,RelativeSource={RelativeSource Self}}"
                                                VerticalAlignment="Center"
                                                Selector.IsSelected="{Binding IsBoldSelected}"/>
                                    <Button Style="{StaticResource FlatButton}"
                                                FontSize="{StaticResource FontSizeSmall}"
                                                Content="{StaticResource ItalicTextIcon}"
                                                Command="{Binding TextStyleCommand}"
                                                CommandParameter="{Binding Content,RelativeSource={RelativeSource Self}}"
                                                VerticalAlignment="Center"
                                                Selector.IsSelected="{Binding IsItalicSelected}"/>
                                    <Button Style="{StaticResource FlatButton}"
                                                FontSize="{StaticResource FontSizeSmall}"
                                                Content="{StaticResource UnderlineTextIcon}"
                                                Command="{Binding TextStyleCommand}"
                                                CommandParameter="{Binding Content,RelativeSource={RelativeSource Self}}"
                                                VerticalAlignment="Center"
                                                Selector.IsSelected="{Binding IsUnderlineSelected}"/>

                                    <Separator />

                                    <Label FontWeight="Bold"
                                               FontSize="{StaticResource FontSizeSmall}"
                                               Foreground="{StaticResource VeryDarkGrayBrush}"
                                               Content="Font size:"
                                               VerticalAlignment="Center" />

                                    <ComboBox ItemsSource="{Binding FontSizes}"
                                                  SelectedItem="{Binding SelectedFontSize}"
                                                  MinWidth="50"
                                                  FontSize="{StaticResource FontSizeSmall}"/>

                                    <Separator />

                                    <xctk:ColorPicker Height="22"
                                                          SelectedColor="{Binding SelectedForeground}"/>

                                    <Separator />

                                    <CheckBox Margin="10" Cursor="Hand"
                                                  FontSize="{StaticResource FontSizeSmall}"
                                                  Content="Add Back Card" IsChecked="{Binding IsBackCardVisible}"/>

                                    <Separator />

                                    <Button Style="{StaticResource LightPrimaryButton}"
                                                    Content="Delete Item" Padding="15 4"
                                                    FontSize="{StaticResource FontSizeSmall}"
                                                    Command="{Binding DeleteCommand}"/>



                                </ToolBar>
                            </ToolBarTray>
                            <Grid Margin="0 5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!--Button to add image-->
                                <Button Grid.Column="0"
                                        Content="Add Front Background"
                                        VerticalAlignment="Bottom"
                                        Margin="10 0"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        Style="{StaticResource LightPrimaryButton}"
                                        Command="{Binding SelectFrontCardBackground}"/>
                                <Button Grid.Column="0" Grid.Row="1"
                                        Content="Add Back Background"
                                        Margin="10 0" VerticalAlignment="Bottom"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        Style="{StaticResource LightPrimaryButton}"
                                        Command="{Binding SelectBackCardBackground}"/>

                                <!--Height Width-->
                                <TextBox  Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                                              Style="{StaticResource TextBoxWithLabelVertical}"
                                              Margin="10 0"
                                              FontSize="{StaticResource FontSizeSmall}"
                                              DataContext="{Binding CardHeight , UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBox Style="{StaticResource TextBoxWithLabelVertical}"  VerticalAlignment="Center"
                                             Grid.Row="1" Grid.Column="1" Margin="10 0"
                                             FontSize="{StaticResource FontSizeSmall}"
                                             DataContext="{Binding CardWidth,UpdateSourceTrigger=PropertyChanged}"/>



                                <!--Cards List-->
                                <ComboBox Style="{StaticResource ComboBoxValidationTemplate}"
                                              DataContext="{Binding Cards}"
                                              Margin="10 0"
                                              Grid.Row="0" Grid.Column="2"
                                              Cursor="Hand"
                                              FontSize="{StaticResource FontSizeSmall}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding DataContext.CardChangedCommand,
                                 RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>

                                <!--Delete Card-->
                                <Button Style="{StaticResource LightPrimaryButton}"
                                        Content="Delete Card" Grid.Row="1" Grid.Column="2"
                                        VerticalAlignment="Bottom" Margin="10 0"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        Command="{Binding DeleteCardCommand}"/>

                                <!--Delete Name-->
                                <TextBox Style="{StaticResource TextBoxWithLabelVertical}" 
                                         Grid.Row="0" Grid.Column="3"
                                         Margin="10 0"
                                         FontSize="{StaticResource FontSizeSmall}"
                                         DataContext="{Binding CardName,UpdateSourceTrigger=PropertyChanged}"/>


                                <!--Save Card-->
                                <Button Style="{StaticResource LightPrimaryButton}"
                                        Content="Save Card" Grid.Row="1" Grid.Column="3"
                                        VerticalAlignment="Bottom" Margin="10 0"
                                        FontSize="{StaticResource FontSizeSmall}"
                                        Command="{Binding SaveCardCommand}"/>
                            </Grid>

                        </StackPanel>
                    </TabItem>
                </TabControl>

            <!--ID-->
            <TextBox Style="{StaticResource TextBoxWithLabelVertical}"
                     Width="200" Grid.Row="2"
                     Margin="0 5 0 0"
                     DataContext="{Binding ID}"
                     Visibility="{Binding DataContext.IsIDVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BasePage}},
                     Converter={local:BoolToVisibilityConverter}}"/>

            <!--ID Card-->
            <ScrollViewer HorizontalScrollBarVisibility="Visible"
                                  VerticalScrollBarVisibility="Visible"
                                  VerticalAlignment="Top" Grid.Row="3" >
                <Grid>
                        <Grid.LayoutTransform>
                            <ScaleTransform CenterX="0" CenterY="0"
                                        ScaleX="{Binding ElementName=ScaleSlider,Path=Value}"
                                        ScaleY="{Binding ElementName=ScaleSlider,Path=Value}"/>
                </Grid.LayoutTransform>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--Front Card-->
                <Border Margin="5" BorderThickness="1" HorizontalAlignment="Center" BorderBrush="Black">

                    <local:CardDesigner ItemSource="{Binding FrontCardItems,Mode=TwoWay}" 
                                            BackgroundImage="{Binding CardFrontBackground}"
                                            Height="{Binding CardHeight.Value,UpdateSourceTrigger=PropertyChanged, Converter={local:InchToPixelConverter}}"
                                            Width="{Binding CardWidth.Value,UpdateSourceTrigger=PropertyChanged, Converter={local:InchToPixelConverter}}"
                                            HorizontalAlignment="Center"
                                            />
                </Border>

                <!--Back Card-->
                <Border HorizontalAlignment="Center" Visibility="{Binding IsBackCardVisible , Converter={local:BoolToVisibilityConverter}}"
                        Margin="5" Grid.Row="1" BorderThickness="1" BorderBrush="Black">

                    <local:CardDesigner ItemSource="{Binding BackCardItems,Mode=TwoWay}" 
                                BackgroundImage="{Binding CardBackBackground}"
                                Height="{Binding CardHeight.Value, UpdateSourceTrigger=PropertyChanged, Converter={local:InchToPixelConverter}}"
                                Width="{Binding CardWidth.Value,UpdateSourceTrigger=PropertyChanged, Converter={local:InchToPixelConverter}}"
                                HorizontalAlignment="Center"
                                
                                />
                </Border>

        </Grid>
                
            </ScrollViewer>
            
            <!--Slider and Button-->
            <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    
                    <!--Zoom Slider-->
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Text="{StaticResource MinusIcon}"
                               Foreground="{StaticResource SecondaryColorBrush}"
                               FontFamily="{StaticResource FontAwesomeSolid}"/>
                        <Slider x:Name="ScaleSlider" ToolTip="Adjust the slider to zoom in/out the card."
                                Value="1" Minimum="0.5" Maximum="4" Margin="10 0" MinWidth="300" Cursor="Hand"/>
                        <TextBlock Text="{StaticResource PlusIcon}" 
                               Foreground="{StaticResource SecondaryColorBrush}"
                               FontFamily="{StaticResource FontAwesomeSolid}"/>
                    </StackPanel>

                    <!--Create Card Button-->
                    <Button Grid.Column="1"
                            Command="{Binding CreateCardCommand}"
                            Content="Create Card"
                            HorizontalAlignment="Right"
                            Margin="20 5 20 20"
                            Cursor="Hand"/>
             </Grid>


        </Grid>
    </materialDesign:DialogHost>
</local:BasePage>